# Generated by Django 2.1.4 on 2019-05-15 16:16

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contest', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PolygonAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('key', models.CharField(max_length=100)),
                ('secret', models.CharField(max_length=100)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('problem_id', models.CharField(blank=True, max_length=20, unique=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('testset_name', models.CharField(default='tests', max_length=100)),
                ('checker', models.TextField(blank=True)),
                ('solution', models.TextField(blank=True)),
                ('status', models.SmallIntegerField(default=0)),
                ('invocation_pk', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ProblemInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_name', models.CharField(max_length=20)),
                ('contest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contest.Contest')),
            ],
        ),
        migrations.CreateModel(
            name='Subtask',
            fields=[
                ('subtask_id', models.AutoField(primary_key=True, serialize=False)),
                ('points', models.IntegerField(default=100)),
                ('description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('input', models.TextField()),
                ('output', models.TextField(blank=True)),
                ('test_id', models.IntegerField()),
                ('in_statement', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Statement',
            fields=[
                ('legend', models.TextField(blank=True)),
                ('input', models.TextField(blank=True)),
                ('output', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('time_limit', models.IntegerField(blank=True)),
                ('memory_limit', models.IntegerField(blank=True)),
                ('input_file', models.CharField(blank=True, max_length=100)),
                ('output_file', models.CharField(blank=True, max_length=100)),
                ('problem', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='problem.Problem')),
            ],
        ),
        migrations.AddField(
            model_name='test',
            name='problem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='problem.Problem'),
        ),
        migrations.AddField(
            model_name='test',
            name='subtask',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='problem.Subtask'),
        ),
        migrations.AlterOrderWithRespectTo(
            name='test',
            order_with_respect_to='test_id',
        ),
        migrations.AddField(
            model_name='subtask',
            name='problem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='problem.Problem'),
        ),
        migrations.AddField(
            model_name='probleminfo',
            name='problem',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='problem.Problem'),
        ),
        migrations.AddField(
            model_name='problem',
            name='contests',
            field=models.ManyToManyField(through='problem.ProblemInfo', to='contest.Contest'),
        ),
        migrations.AddField(
            model_name='problem',
            name='polygon_account',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='problem.PolygonAccount'),
        ),
    ]
